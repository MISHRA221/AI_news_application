// Use this sample to create your own voice commands
/*intent('hello world', p => {
    p.play('(hello|hi there)');
});


// Give Alan some knowledge about the world
corpus(`
    Hello, I'm Alan.
    This is a demo application.
    You can learn how to teach Alan useful skills.
    I can teach you how to write Alan Scripts.
    I can help you. I can do a lot of things. I can answer questions. I can do tasks.
    But they should be relevant to this application.
    I can help with this application.
    I'm Alan. I'm a virtual assistant. I'm here to help you with applications.
    This is a demo script. It shows how to use Alan.
    You can create dialogs and teach me.
    For example: I can help navigate this application.
`);*/

intent('what is this application about?', 'what does this app do?', 'why is it used?',
    reply('this application is news application.'));

/*intent('start a command', (p) =>{
    //p.play('hello, i understood your command')
    p.play({ command: 'testcommand'});
}
      )*/

const API_KEY='13c4f2289d9a43c58b61d0e49429fb3f';
let savedarticles=[]

intent('give me the news from $(source* (.*))', (p) => {
    let NEWS_API_URL = `https://newsapi.org/v2/top-headlines?apiKey=${API_KEY}`;
    
   if(p.source.value) {
       NEWS_API_URL=`${NEWS_API_URL}&sources=${p.source.value.toLowerCase().split(" ").join("-")}`
   }
    api.request(NEWS_API_URL,(error, response, body) => {
        const {articles} = JSON.parse(body);
        
        if(!articles.length){
            p.play("sorry, i am unable to understand. ");
            return; 
        }
         savedarticles=articles
        p.play({command: 'NEWHEADLINES', articles});
        p.play(`here are the (latest|recent|relevant) ${p.source.value}`);
        
        p.play('would you like me to read the headlines');
        p.then(confirmation);
    });
}) 

intent('what\'s up with $(term* (.*))', (p) => {
    let NEWS_API_URL = `https://newsapi.org/v2/everything?apiKey=${API_KEY}`;
    
   if(p.term.value) {
       NEWS_API_URL=`${NEWS_API_URL}&q=${p.term.value}`
   }
    api.request(NEWS_API_URL,(error, response, body) => {
        const {articles} = JSON.parse(body);
        
        if(!articles.length){
            p.play("sorry, i am unable to understand. ");
            return; 
        }
         savedarticles=articles
        p.play({command: 'NEWHEADLINES', articles});
        p.play(`here are the (latest|recent|relevant) artcles on ${p.term.value}`);
        
        p.play('would you like me to read the headlines');
        p.then(confirmation);
    });
})

const CATEGORIES = ['business', 'entertainment', 'general', 'health', 'science', 'sports', 'technology'];
const CATEGORIES_INTENT = `${CATEGORIES.map((category) => `${category}~${category}`).join('|')}`;

intent(`(show|what is|tell me|what's|what are|what're|read) (the|) (recent|latest|) $(N news|headlines) (in|about|on|) $(C~ ${CATEGORIES_INTENT})`,
  `(read|show|get|bring me|give me) (the|) (recent|latest) $(C~ ${CATEGORIES_INTENT}) $(N news|headlines)`, (p) => {
    let NEWS_API_URL = `https://newsapi.org/v2/top-headlines?apiKey=${API_KEY} &countery=india`;
    
   if(p.c.value) {
       NEWS_API_URL=`${NEWS_API_URL}&category=${p.c.value}`
   }
    api.request(NEWS_API_URL,(error, response, body) => {
        const {articles} = JSON.parse(body);
        
        if(!articles.length){
            p.play("please try for a different category ");
            return; 
        }
        savedarticles=articles
        p.play({command: 'NEWHEADLINES', articles});
         
        if(p.c.value) {
       NEWS_API_URL=`${NEWS_API_URL}&category=${p.c.value}`       
        p.play(`here are the (latest|recent|relevant) artcles on ${p.c.value}`);
        }
        else{
            p.play(`here are the (latest|recent|relevant) news`);
        }
        p.play('would you like me to read the headlines');
        p.then(confirmation);
    });
})

const confirmation= context(() => {
intent('yes', async (p) => {
    for (let i = 0; i < savedarticles.length; i++){
        p.play({ command: 'highlight', article: savedarticles[i]});
        p.play(`$(savedarticles[i].title)`);
       }
})
intent('no', (p) => {
    p.play('Sure, sounds good to me.');
});
})

intent('open (the|) (article|) (number|) $(number* (.*))', (p) => {
    if(p.number.value){
        p.play({command: 'open', number: p.number.value, articles: savedarticles})
    }
}
      )
 intent('(go|) back',(p)=>{
     p.play('sure, going back');
     p.play({command: 'NEWHEADLINES', articles:[]})
 })
